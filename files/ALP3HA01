Studenten: André Hempel, Philipp Thiele
Tutor: David Wellner
Tutorium: Mittwoch, 16-18 Uhr


Aufgabe 2

a)
0 CLOAD 1
1 STORE 2
2 LOAD 1
3 IF c(0)==0 GOTO 9
4 MULT 2
5 STORE 2
6 CSUB 1
7 STORE 1
8 GOTO 2
9 END


b)
In c(1) ist indirekt die Anzahl der Werte abrufbar.
Werte sind gespeichert von c(10) bis c(11+c(1)), also c(1)+2 Werte.
Zweitgrößter Wert der Folge soll in c(2) zurückgegeben werden.

c(3) größte bereits überprüfte Zahl
c(4) zweitgrößte bereits überprüfte Zahl
c(5) Kontrollwert um nur bis zur höchsten Speicherzelle zu arbeiten

Das Programm beginnt damit, die Werte von aus c(10) und c(11) zu vergleichen und speichert sie abhängig vom Wert in c(3) bzw. c(4).
In c(5) wird der Wert 11 gespeichert, um die Anzahl der Schleifendurchläufe regulieren zu können und auf die richtigen Speicherzellen zugreifen zu können.
Er wird zu beginnt um 1 erhöht, da c(12) der erste zu vergleichende Wert ist.
Es wird überprüft, ob die Schleife abgebrochen werden muss(Zeile 15).
Sollte das nicht der Fall sein, wird der Wert der aktuellen Speicherzelle geladen und zu nächst mit c(3) verglichen. Sollte er größer sein, muss c(3) geladen und in c(4) gespeichert werden. Dann wird der aktuelle Wert erneut geladen und als aktuell größter Wert in c(3) gespeichert.
Sollte das nicht der Fall sein, wird der aktuelle Wert mit c(4) verglichen. Sollte er größer sein, so wird er in c(4) gespeichert.
Unabhängig davon, ob einer der beiden Fälle eintritt oder nicht, wird danach in Zeile 11 gesprungen, wo der Schleifenzähler geladen und um 1 erhöht wird, bevor sich die zuvor beschriebene Prozedur wiederholt.
Sollte die Abbruchbedingung erfüllt werden, wird der Wert aus c(4), der dann der zweitgrößte aller überprüften Zahlen ist, in c(2) gespeichert und das Programm kann beendet werden.

0 LOAD 10
1 IF c(0)>c(11) GOTO 6
2 STORE 4
3 LOAD 11
4 STORE 3
5 GOTO 9
6 STORE 3
7 LOAD 11
8 STORE 4
9 CLOAD 11
10 STORE 5
11 LOAD 5
12 CADD 1
13 STORE 5
14 CSUB 11
15 IF c(0)>c(1) GOTO 27
16 INDLOAD 5
17 IF c(0)>c(3) GOTO 22
18 IF c(0)>c(4) GOTO 20
19 GOTO 11
20 STORE 4
21 GOTO 11
22 LOAD 3
23 STORE 4
24 INDLOAD 5
25 STORE 3
26 GOTO 11
27 LOAD 4
28 STORE 2
29 END


Aufgabe 3

maxProd(A)
n=length(A)
p=0
for i=0 to n-2
    for j=i+1 to n-1
        q=A[i]*A[j]
        if q>p then p=q
return p

a)
Es werden (n-1)! Multiplikationen ausgefuehrt.
T (n) ∈ Θ(f (n)) = n!


b)
Der Algorithmus ermittelt die beiden größten Werte und multipliziert diese miteinander.
Das größtmögliche Produkt entsteht zweifelsohne aus den beiden größten Faktoren.

maxProd(A)
n=length(A)
a=0
b=0
for i=0 to n-1
	if A[i]>a then b=a,a=A[i]
	else
		if A[i]>b then b=A[i]
return a*b

c)
Hier gibt es mehrere Möglichkeiten. So könnte man zum Beipiel neben den beiden größten Zahlen auch die beiden kleinsten Zahlen ermitteln und diese miteinander multiplizieren. Das Produkt vergleicht man mit dem Produkt der Multiplikation der beiden größten Zahlen und gibt das größere der beiden zurück.